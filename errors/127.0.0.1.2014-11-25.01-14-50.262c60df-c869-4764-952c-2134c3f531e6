(dp1
S'output'
p2
S"<type 'exceptions.ValueError'> invalid literal for long() with base 10: '1w'"
p3
sS'layer'
p4
S'/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/applications/bootup/controllers/pledge.py'
p5
sS'code'
p6
S'from applications.bootup.forms.bootupform import BOOTUPFORM\n\n@auth.requires_login\ndef view():\n    projectid = request.args(0)\n\n    if projectid is None:\n        raise HTTP(404,"No project specified")\n\n    project = db(myprojects & (db.project.idproject==projectid)).select(db.project.ALL).first()\n\n    if project is None:\n        raise HTTP(404,"Project does not exist")\n\n    if not project.canedit():\n        raise HTTP(403, "Cannot edit this project")\n\n    return dict(project=project)\n\n\n\n@auth.requires_login\ndef create():\n    projectid = request.args(0)\n\n    if projectid is None:\n        raise HTTP(404,"No project specified")\n\n    project = db(myprojects & (db.project.idproject==projectid)).select(db.project.ALL).first()\n\n    if project is None:\n        raise HTTP(404,"Project does not exist")\n\n    if not project.canedit():\n        raise HTTP(403, "Cannot edit this project")\n\n    form = BOOTUPFORM.factory(db.pledge,Field(\'rewards\',requires=IS_IN_DB(db(db.reward.projectid==projectid),db.reward.idreward,\'%(description)s\',multiple=[1,9999], error_message="Please select at least one reward")))\n\n\n\n    if( form.process().accepted):\n\n        pledgeid = db.pledge.insert(idpledge=None,description=form.vars.description, value=form.vars.value, projectid=projectid)\n\n        for reward in form.vars.rewards:\n            reward = int(reward)\n            dbreward = db(db.reward.idreward==reward).select(db.reward.ALL).first()\n            if int(dbreward.projectid) is int(projectid):\n                db.rewardpledge.insert(rewardid=reward, pledgeid=pledgeid)\n\n\n        redirect(URL(\'bootup\',\'pledge\',\'view\',args=[projectid]))\n    return dict(project=project, form=form)\n\n\n@auth.requires_login\ndef edit():\n    pledgeid = request.args(0)\n\n    if pledgeid is None:\n        raise HTTP(404,"No project specified")\n\n    pledge = db((db.pledge.idpledge == pledgeid) & myprojects & (db.project.idproject==db.pledge.projectid)).select(db.project.ALL,db.pledge.ALL).first()\n\n    if pledge is None:\n        raise HTTP(404,"Reward does not exist")\n\n    if not pledge.project.canedit():\n        raise HTTP(403, "Cannot edit this project")\n\n    form = BOOTUPFORM.factory(db.pledge,\n                      Field(\'rewards\',requires=IS_IN_DB(db(db.reward.projectid==pledge.pledge.projectid),db.reward.idreward,\'%(description)s\',multiple=[1,9999], error_message="Please select at least one reward")),\n                      record=pledge.pledge)\n    if( form.process().accepted):\n        redirect(URL(\'bootup\',\'pledge\',\'view\',args=[pledge.pledge.projectid]))\n    return dict(form=form)\n\n@auth.requires_login\ndef delete():\n    rewardid = request.args(0)\n\n    if rewardid is None:\n        raise HTTP(404,"No project specified")\n\n    reward = db((db.reward.idreward == rewardid) & myprojects & (db.project.idproject==db.reward.projectid)).select(db.project.ALL,db.reward.ALL).first()\n\n    if reward is None:\n        raise HTTP(404,"Reward does not exist")\n\n    if not reward.project.canedit():\n        raise HTTP(403, "Cannot edit this project")\n\n\n    form = FORM.confirm(\'Delete\',{\'Back\':URL(request.env.http_referrer)})\n    projectid = reward.reward.projectid\n\n\n    if form.accepted:\n        db(db.reward.idreward == rewardid).delete()\n        redirect(URL(\'bootup\',\'reward\',\'view\',args=[projectid]))\n\n    return dict(form=form)\n\nresponse._vars=response._caller(edit)\n'
p7
sS'snapshot'
p8
(dp9
sS'traceback'
p10
S'Traceback (most recent call last):\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/restricted.py", line 224, in restricted\n    exec ccode in environment\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/applications/bootup/controllers/pledge.py", line 104, in <module>\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/globals.py", line 392, in <lambda>\n    self._caller = lambda f: f()\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/applications/bootup/models/auth.py", line 20, in _a\n    return fn()\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/applications/bootup/controllers/pledge.py", line 63, in edit\n    pledge = db((db.pledge.idpledge == pledgeid) & myprojects & (db.project.idproject==db.pledge.projectid)).select(db.project.ALL,db.pledge.ALL).first()\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 10749, in select\n    return adapter.select(self.query, fields, attributes)\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 2472, in select\n    return super(SQLiteAdapter, self).select(query, fields, attributes)\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1868, in select\n    sql = self._select(query, fields, attributes)\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1767, in _select\n    sql_w = \' WHERE \' + self.expand(query) if query else \'\'\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1544, in expand\n    out = op(first, second, **optional_args)\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1382, in AND\n    return \'(%s AND %s)\' % (self.expand(first), self.expand(second))\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1544, in expand\n    out = op(first, second, **optional_args)\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1382, in AND\n    return \'(%s AND %s)\' % (self.expand(first), self.expand(second))\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1544, in expand\n    out = op(first, second, **optional_args)\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1440, in EQ\n    self.expand(second, first.type))\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 1555, in expand\n    return str(self.represent(expression, field_type))\n  File "/Users/james/Documents/Dropbox/Uni/Year 4/iapt/assessment/web2py-2.9.11/web2py/gluon/dal.py", line 2005, in represent\n    return str(long(obj))\nValueError: invalid literal for long() with base 10: \'1w\'\n'
p11
s.